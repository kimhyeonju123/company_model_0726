header{
    width: 100%;
}
header .inner{
    width: 1180px;
    height: 120px;
    margin: 0 auto;
    position: relative;
}
header .inner h1{
    position: absolute;
    left: 0;bottom: 20px;
}
/* 
글은 a 태그에 작성했기 때문에 h1에는 폰트가 적용되지 않음
반드시 글을 작성한  a태그에 font 적용하기
*/
header .inner h1 a{
    font: bold 24px/1 "arial";
    color: #444;
}
/* menu Web */
header .inner .menuWeb #gnb{
    position: absolute; right: 30px;bottom: 0;

}
header .inner .menuWeb #gnb li{
    float: left;
}
header .inner .menuWeb #gnb li a{
    display: block;
    padding: 14px 40px;
    font: bold 14px/1 "arial";
    color: #777;
}
header .inner .menuWeb #gnb li a:hover{
    background-color: #555;
    color: #fff;
}
header .inner .util{
    position: absolute;
    top: 20px;
    right: 30px;
}
header .inner .util li{
    float: left;
    margin-left: 20px;
}
header .inner .util li a{
    font: 12px/1 "arial";
    color: #999;
}

/* 햄버거버튼 */
header .inner .btnCall{
    position: absolute;
    top: 50%;
    right: 30px;
    transform: translateY(-50%);
    display: none;
    width: 20px;height: 20px;
}
/* 햄버거 버튼은 화면을 줄이면 그때 나타나게 할거임 */
header .inner .btnCall::before{
    content: '';
    display: block;
    width: 100%;
    height: 2px;
    background-color: black;
    position: absolute;
    top: 0;left: 0;
    transition: top 0.5s 0s, transform 0.5s 0.5s;
}
header .inner .btnCall::after{
    content: '';
    display: block;
    width: 100%;
    height: 2px;
    background-color: black;
    position: absolute;
    bottom: 0;left: 0;
    transition: bottom 0.5s 0s, transform 0.5s 0.5s;
}
/* 중간에 있는 선은 자식요소인 span으로 만들기 */
header .inner .btnCall span{
    display: block;
    width: 100%;
    height: 2px;
    background-color: black;
    position: absolute;
    top: 50%;
    left: 0;
    margin-top: -1px;
    /* 2px이라서 밑으로 내려온 것처럼 보이는데
    다시 올려주기 위해서 margin-top -1px을 줌 */
    text-indent: -9999999999px;
    /* 접근성을 위해 만들었던 글씨 '메뉴호출' 글자를 들여쓰기로 없애주기 */
    transition: 0.5s;

}
/* 약간의 자바스크립트를 사용해서 위 아래 선 교차시켜서 x자 만들기 */
/* 
자바스크립트에서는 on이라는 클래스를 붙이기만 하고
실제 움직이거나 변경되는 것은 css에 적어둠
*/
header .inner .btnCall.on::before{
    top: 50%;
    margin-top: -1px;
    transform: rotate(45deg);
}
header .btnCall.on::after{
    bottom: 50%;
    margin-bottom: -1px;
    transform: rotate(-45deg);
}
header .inner .btnCall.on span{
    transform: translateX(100%);
    opacity: 0;

    /* 2번째 줄 없애주기 */
}


/* 모바일 메뉴 */
header .inner .menuMo{
    width: 270px;
    height: 100vh;
    background-color: #333;
    position: fixed;
    top: 0;
    /* left: 0; */
    left: -270px;
    padding: 35px 30px;
    z-index: 10;
    text-align: center;
    transition: 0.5s;
}
header .inner .menuMo.on{
    left: 0;
}
header .inner .menuMo h2{
    padding-bottom: 30px;
    border-bottom: 1px solid #666;
}
header .inner .menuMo h2 a{
    display: block;
    font: bold 24px/1 "arial";
    color: #fff;
}
header .inner .menuMo h2 span{
    font-size: 12px;
    color: #aaa;
}
header .inner .menuMo #gnbMo li a{
    display: block;
    width: 100%;
    padding: 20px 0;
    border-bottom: 1px solid #444;
    font: bold 14px/1 "arial";
    color: #888;
}

@media screen and (max-width:1179px) {
    header .inner{
        width: 100%;
        height: 100px;
    }
    header .inner h1{
        left: 20px;
        bottom: 30px;
    }
    header .inner .menuWeb{
        display: none;
    }
/* 모든 코드는 웹버전에 만들어두고
(반응형에 해당하는 코드까지도 웹버전에 만들어둔다는 뜻)
반응형에 해당하는 구간에서는 해당 코드들을
display none등으로 안 보이게 하거나, 
보여야하는 것들은 display block으로 보이게 하는 것으로 구현함 
*/
    header .inner .btnCall{
        display: block;
    }
}
